//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleClient.CalcServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalcServiceReference.ICalcService", CallbackContract=typeof(ConsoleClient.CalcServiceReference.ICalcServiceCallback))]
    public interface ICalcService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Incr", ReplyAction="http://tempuri.org/ICalcService/IncrResponse")]
        void Incr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Incr", ReplyAction="http://tempuri.org/ICalcService/IncrResponse")]
        System.Threading.Tasks.Task IncrAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Decr", ReplyAction="http://tempuri.org/ICalcService/DecrResponse")]
        void Decr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Decr", ReplyAction="http://tempuri.org/ICalcService/DecrResponse")]
        System.Threading.Tasks.Task DecrAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/SubscribeIncrEvent", ReplyAction="http://tempuri.org/ICalcService/SubscribeIncrEventResponse")]
        void SubscribeIncrEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/SubscribeIncrEvent", ReplyAction="http://tempuri.org/ICalcService/SubscribeIncrEventResponse")]
        System.Threading.Tasks.Task SubscribeIncrEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/SubscribeDecrEvent", ReplyAction="http://tempuri.org/ICalcService/SubscribeDecrEventResponse")]
        void SubscribeDecrEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/SubscribeDecrEvent", ReplyAction="http://tempuri.org/ICalcService/SubscribeDecrEventResponse")]
        System.Threading.Tasks.Task SubscribeDecrEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/SubscribeUpdateFinishedEvent", ReplyAction="http://tempuri.org/ICalcService/SubscribeUpdateFinishedEventResponse")]
        void SubscribeUpdateFinishedEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/SubscribeUpdateFinishedEvent", ReplyAction="http://tempuri.org/ICalcService/SubscribeUpdateFinishedEventResponse")]
        System.Threading.Tasks.Task SubscribeUpdateFinishedEventAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalcServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalcService/IncrOp")]
        void IncrOp(int res);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalcService/DecrOp")]
        void DecrOp(int res);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICalcService/UpdateFinished")]
        void UpdateFinished();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalcServiceChannel : ConsoleClient.CalcServiceReference.ICalcService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalcServiceClient : System.ServiceModel.DuplexClientBase<ConsoleClient.CalcServiceReference.ICalcService>, ConsoleClient.CalcServiceReference.ICalcService {
        
        public CalcServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CalcServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CalcServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalcServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalcServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Incr() {
            base.Channel.Incr();
        }
        
        public System.Threading.Tasks.Task IncrAsync() {
            return base.Channel.IncrAsync();
        }
        
        public void Decr() {
            base.Channel.Decr();
        }
        
        public System.Threading.Tasks.Task DecrAsync() {
            return base.Channel.DecrAsync();
        }
        
        public void SubscribeIncrEvent() {
            base.Channel.SubscribeIncrEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeIncrEventAsync() {
            return base.Channel.SubscribeIncrEventAsync();
        }
        
        public void SubscribeDecrEvent() {
            base.Channel.SubscribeDecrEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeDecrEventAsync() {
            return base.Channel.SubscribeDecrEventAsync();
        }
        
        public void SubscribeUpdateFinishedEvent() {
            base.Channel.SubscribeUpdateFinishedEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeUpdateFinishedEventAsync() {
            return base.Channel.SubscribeUpdateFinishedEventAsync();
        }
    }
}
